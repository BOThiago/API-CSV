import Deploy from '../index';
import { ProjectDefinitionClass, ExternalFiles, Config, Client, Output } from 'graphcool-cli-engine';
import 'isomorphic-fetch';
export default class Bundler {
    definition: ProjectDefinitionClass;
    config: Config;
    client: Client;
    out: Output;
    projectId: string;
    buildDir: string;
    zipPath: string;
    dotBuildDir: string;
    constructor(cmd: Deploy, projectId: string);
    getIsDir(filePath: string): Promise<{
        filePath: string;
        isDir: boolean;
    }>;
    bundle(): Promise<ExternalFiles>;
    private prettyTime(time);
    cleanBuild(): Promise<void>;
    upload(): Promise<string>;
    getExternalFiles(url: string): ExternalFiles;
    generateEnvFiles(): void;
    generateHandlerFiles(): void;
    readonly shortFileNamesBlacklist: string[];
    readonly fullFileNames: string[];
    getBuildFileName: (src: string) => string;
    getLambdaHandlerPath: (fileName: string) => string;
    getLambdaHandler: (fileName: string) => string;
    getDevHandlerPath: (fileName: string) => string;
    getBylinePath: (fileName: string) => string;
    getEnvPath: (fileName: string) => string;
}

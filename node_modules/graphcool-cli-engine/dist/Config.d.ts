import { RunOptions } from './types';
import { Output } from './Output/index';
export declare class Config {
    /**
     * Local settings
     */
    out: Output;
    debug: boolean;
    windows: boolean;
    bin: string;
    mock: boolean;
    argv: string[];
    commandsDir: string;
    defaultCommand: string;
    userPlugins: boolean;
    version: string;
    name: string;
    pjson: any;
    /**
     * Paths
     */
    cwd: string;
    home: string;
    root: string;
    envPath: string | null;
    definitionDir: string;
    definitionPath: string | null;
    dotGraphcoolFilePath: string | null;
    warnings: string[];
    /**
     * Urls
     */
    token: string | null;
    authUIEndpoint: string;
    backendAddr: string;
    systemAPIEndpoint: string;
    authEndpoint: string;
    docsEndpoint: string;
    statusEndpoint: string;
    __cache: {};
    constructor(options?: RunOptions);
    setOutput(out: Output): void;
    setToken(token: string | null): void;
    saveToken(): void;
    readonly arch: string;
    readonly platform: string;
    readonly userAgent: string;
    readonly dirname: any;
    readonly cacheDir: string;
    private readPackageJson(options);
    private setEnvPath();
    private warn(msg);
    private setDefinitionPaths();
    private setDotGraphcoolPath();
    private setTokenIfExists();
    private getCwd();
    private getHome();
}

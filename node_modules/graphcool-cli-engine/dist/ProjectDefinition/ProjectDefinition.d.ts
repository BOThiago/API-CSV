import { GraphcoolModule, ProjectDefinition } from '../types';
import { Output } from '../Output/index';
import { Config } from '../Config';
import { FunctionDefinition } from 'graphcool-json-schema';
export declare class ProjectDefinitionClass {
    static sanitizeDefinition(definition: ProjectDefinition): {
        modules: {
            name: string;
            content: string;
            files: {
                [fileName: string]: string;
            };
        }[];
    };
    definition: ProjectDefinition | null;
    out: Output;
    config: Config;
    constructor(out: Output, config: Config);
    load(): Promise<void>;
    save(files?: string[], silent?: boolean): Promise<void>;
    saveTypes(): Promise<void>;
    injectEnvironment(): Promise<void>;
    insertModule(moduleName: string, relativePath: string): string;
    set(definition: ProjectDefinition | null): void;
    getFunctionAndModule(name: string): {
        fn: FunctionDefinition;
        module: GraphcoolModule;
    } | null;
    private injectEnvironmentToFile(file, environment);
    private insertToDefinition(file, key, insertion);
}

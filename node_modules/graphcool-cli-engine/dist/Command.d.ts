import 'source-map-support/register';
import { Arg, Flags } from './Flags/index';
import { Output } from './Output';
import { Config } from './Config';
import { EnvironmentConfig, ProjectDefinition, RunOptions } from './types';
import { OutputArgs, OutputFlags } from './Parser';
import { Client } from './Client/Client';
import { ProjectDefinitionClass } from './ProjectDefinition/ProjectDefinition';
import { Auth } from './Auth';
import { Environment } from './Environment';
export declare class Command {
    static topic: string;
    static command?: string;
    static description?: string;
    static usage?: string;
    static flags: Flags;
    static args: Arg[];
    static aliases: string[];
    static hidden: boolean;
    static mockDefinition: ProjectDefinition;
    static mockEnv: EnvironmentConfig;
    static readonly id: string;
    static mock(...argv: any[]): Promise<Command>;
    static run(config?: RunOptions): Promise<Command>;
    static buildHelp(config: Config): string;
    static buildHelpLine(config: Config): string[];
    protected static version: any;
    client: Client;
    out: Output;
    config: Config;
    definition: ProjectDefinitionClass;
    auth: Auth;
    env: Environment;
    flags: OutputFlags;
    args?: OutputArgs;
    argv: string[];
    constructor(options?: {
        config?: RunOptions;
    });
    run(...rest: void[]): Promise<void>;
    init(options?: RunOptions): Promise<void>;
    readonly stdout: string;
    readonly stderr: string;
}
